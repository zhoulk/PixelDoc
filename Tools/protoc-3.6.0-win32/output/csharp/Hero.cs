// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: hero.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Msg {

  /// <summary>Holder for reflection information generated from hero.proto</summary>
  public static partial class HeroReflection {

    #region Descriptor
    /// <summary>File descriptor for hero.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HeroReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpoZXJvLnByb3RvEgNtc2caCWVyci5wcm90bxoLc2tpbGwucHJvdG8aCml0",
            "ZW0ucHJvdG8iDQoLSGVyb1JlcXVlc3QiYgoMSGVyb1Jlc3BvbnNlEh8KBGNv",
            "ZGUYASABKA4yES5tc2cuUmVzcG9uc2VDb2RlEhcKA2VychgCIAEoCzIKLm1z",
            "Zy5FcnJvchIYCgVoZXJvcxgDIAMoCzIJLm1zZy5IZXJvIhQKEkhlcm9Mb3R0",
            "ZXJ5UmVxdWVzdCJ2ChNIZXJvTG90dGVyeVJlc3BvbnNlEh8KBGNvZGUYASAB",
            "KA4yES5tc2cuUmVzcG9uc2VDb2RlEhcKA2VychgCIAEoCzIKLm1zZy5FcnJv",
            "chIlCgtoZXJvTG90dGVyeRgDIAEoCzIQLm1zZy5IZXJvTG90dGVyeSI4ChFI",
            "ZXJvUmFuZG9tUmVxdWVzdBIjCgVMZXZlbBgBIAEoDjIULm1zZy5IZXJvUmFu",
            "ZG9tTGV2ZWwiZwoSSGVyb1JhbmRvbVJlc3BvbnNlEh8KBGNvZGUYASABKA4y",
            "ES5tc2cuUmVzcG9uc2VDb2RlEhcKA2VychgCIAEoCzIKLm1zZy5FcnJvchIX",
            "CgRoZXJvGAMgASgLMgkubXNnLkhlcm8iEAoOSGVyb093blJlcXVlc3QiZQoP",
            "SGVyb093blJlc3BvbnNlEh8KBGNvZGUYASABKA4yES5tc2cuUmVzcG9uc2VD",
            "b2RlEhcKA2VychgCIAEoCzIKLm1zZy5FcnJvchIYCgVoZXJvcxgDIAMoCzIJ",
            "Lm1zZy5IZXJvIjAKEUhlcm9TZWxlY3RSZXF1ZXN0Eg4KBmhlcm9JZBgBIAEo",
            "CRILCgNwb3MYAiABKAUiXwoSSGVyb1NlbGVjdFJlc3BvbnNlEh8KBGNvZGUY",
            "ASABKA4yES5tc2cuUmVzcG9uc2VDb2RlEhcKA2VychgCIAEoCzIKLm1zZy5F",
            "cnJvchIPCgdoZXJvSWRzGAMgAygJIiUKE0hlcm9VblNlbGVjdFJlcXVlc3QS",
            "DgoGaGVyb0lkGAEgASgJImEKFEhlcm9VblNlbGVjdFJlc3BvbnNlEh8KBGNv",
            "ZGUYASABKA4yES5tc2cuUmVzcG9uc2VDb2RlEhcKA2VychgCIAEoCzIKLm1z",
            "Zy5FcnJvchIPCgdoZXJvSWRzGAMgAygJIiMKEUhlcm9Ta2lsbHNSZXF1ZXN0",
            "Eg4KBmhlcm9JZBgBIAEoCSJqChJIZXJvU2tpbGxzUmVzcG9uc2USHwoEY29k",
            "ZRgBIAEoDjIRLm1zZy5SZXNwb25zZUNvZGUSFwoDZXJyGAIgASgLMgoubXNn",
            "LkVycm9yEhoKBnNraWxscxgDIAMoCzIKLm1zZy5Ta2lsbCIjChFIZXJvRXF1",
            "aXBzUmVxdWVzdBIOCgZoZXJvSWQYASABKAkiagoSSGVyb0VxdWlwc1Jlc3Bv",
            "bnNlEh8KBGNvZGUYASABKA4yES5tc2cuUmVzcG9uc2VDb2RlEhcKA2VychgC",
            "IAEoCzIKLm1zZy5FcnJvchIaCgZlcXVpcHMYAyADKAsyCi5tc2cuRXF1aXAi",
            "xQMKBEhlcm8SCgoCSWQYASABKAUSDAoETmFtZRgCIAEoCRINCgVMZXZlbBgD",
            "IAEoBRIQCghTdHJlbmd0aBgEIAEoBRIPCgdBZ2lsaXR5GAUgASgFEhQKDElu",
            "dGVsbGlnZW5jZRgGIAEoBRINCgVBcm1vchgHIAEoBRIRCglBdHRhY2tNaW4Y",
            "CCABKAUSEQoJQXR0YWNrTWF4GAkgASgFEg0KBUJsb29kGAogASgFEgwKBFR5",
            "cGUYCyABKAUSFAoMU3RyZW5ndGhTdGVwGAwgASgFEhMKC0FnaWxpdHlTdGVw",
            "GA0gASgFEhgKEEludGVsbGlnZW5jZVN0ZXAYDiABKAUSEAoIU2tpbGxJZHMY",
            "DyADKAkSDgoGSGVyb0lkGBAgASgJEhAKCFBsYXllcklkGBEgASgJEhAKCElz",
            "U2VsZWN0GBIgASgIEgsKA1BvcxgTIAEoBRIKCgJNUBgUIAEoBRIQCghNYXhC",
            "bG9vZBgVIAEoBRINCgVNYXhNUBgWIAEoBRISCgpTa2lsbFBvaW50GBcgASgF",
            "EgsKA0V4cBgYIAEoBRISCgpMZXZlbFVwRXhwGBkgASgFEg8KB0l0ZW1JZHMY",
            "GiADKAkipQIKC0hlcm9Mb3R0ZXJ5EhcKD0ZyZWVHb29kTG90dGVyeRgBIAEo",
            "BRIZChFGcmVlQmV0dGVyTG90dGVyeRgCIAEoBRIcChROZXh0R29vZExvdHRl",
            "cnlTdGFtcBgDIAEoAxIeChZOZXh0QmV0dGVyTG90dGVyeVN0YW1wGAQgASgD",
            "EhoKEk1heEZyZWVHb29kTG90dGVyeRgFIAEoBRIcChRNYXhGcmVlQmV0dGVy",
            "TG90dGVyeRgGIAEoBRIWCg5Hb29kTG90dGVyeUNudBgHIAEoBRIYChBCZXR0",
            "ZXJMb3R0ZXJ5Q250GAggASgFEhoKEk5lZWRHb29kTG90dGVyeUNudBgJIAEo",
            "BRIcChROZWVkQmV0dGVyTG90dGVyeUNudBgKIAEoBSoxCg9IZXJvUmFuZG9t",
            "TGV2ZWwSCAoER09PRBAAEgoKBkJFVFRFUhABEggKBEJFU1QQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Msg.ErrReflection.Descriptor, global::Msg.SkillReflection.Descriptor, global::Msg.ItemReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Msg.HeroRandomLevel), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroRequest), global::Msg.HeroRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroResponse), global::Msg.HeroResponse.Parser, new[]{ "Code", "Err", "Heros" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroLotteryRequest), global::Msg.HeroLotteryRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroLotteryResponse), global::Msg.HeroLotteryResponse.Parser, new[]{ "Code", "Err", "HeroLottery" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroRandomRequest), global::Msg.HeroRandomRequest.Parser, new[]{ "Level" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroRandomResponse), global::Msg.HeroRandomResponse.Parser, new[]{ "Code", "Err", "Hero" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroOwnRequest), global::Msg.HeroOwnRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroOwnResponse), global::Msg.HeroOwnResponse.Parser, new[]{ "Code", "Err", "Heros" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroSelectRequest), global::Msg.HeroSelectRequest.Parser, new[]{ "HeroId", "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroSelectResponse), global::Msg.HeroSelectResponse.Parser, new[]{ "Code", "Err", "HeroIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroUnSelectRequest), global::Msg.HeroUnSelectRequest.Parser, new[]{ "HeroId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroUnSelectResponse), global::Msg.HeroUnSelectResponse.Parser, new[]{ "Code", "Err", "HeroIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroSkillsRequest), global::Msg.HeroSkillsRequest.Parser, new[]{ "HeroId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroSkillsResponse), global::Msg.HeroSkillsResponse.Parser, new[]{ "Code", "Err", "Skills" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroEquipsRequest), global::Msg.HeroEquipsRequest.Parser, new[]{ "HeroId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroEquipsResponse), global::Msg.HeroEquipsResponse.Parser, new[]{ "Code", "Err", "Equips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.Hero), global::Msg.Hero.Parser, new[]{ "Id", "Name", "Level", "Strength", "Agility", "Intelligence", "Armor", "AttackMin", "AttackMax", "Blood", "Type", "StrengthStep", "AgilityStep", "IntelligenceStep", "SkillIds", "HeroId", "PlayerId", "IsSelect", "Pos", "MP", "MaxBlood", "MaxMP", "SkillPoint", "Exp", "LevelUpExp", "ItemIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HeroLottery), global::Msg.HeroLottery.Parser, new[]{ "FreeGoodLottery", "FreeBetterLottery", "NextGoodLotteryStamp", "NextBetterLotteryStamp", "MaxFreeGoodLottery", "MaxFreeBetterLottery", "GoodLotteryCnt", "BetterLotteryCnt", "NeedGoodLotteryCnt", "NeedBetterLotteryCnt" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum HeroRandomLevel {
    [pbr::OriginalName("GOOD")] Good = 0,
    [pbr::OriginalName("BETTER")] Better = 1,
    [pbr::OriginalName("BEST")] Best = 2,
  }

  #endregion

  #region Messages
  public sealed partial class HeroRequest : pb::IMessage<HeroRequest> {
    private static readonly pb::MessageParser<HeroRequest> _parser = new pb::MessageParser<HeroRequest>(() => new HeroRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroRequest(HeroRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroRequest Clone() {
      return new HeroRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class HeroResponse : pb::IMessage<HeroResponse> {
    private static readonly pb::MessageParser<HeroResponse> _parser = new pb::MessageParser<HeroResponse>(() => new HeroResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroResponse(HeroResponse other) : this() {
      code_ = other.code_;
      err_ = other.err_ != null ? other.err_.Clone() : null;
      heros_ = other.heros_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroResponse Clone() {
      return new HeroResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Msg.ResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private global::Msg.Error err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Error Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "heros" field.</summary>
    public const int HerosFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.Hero> _repeated_heros_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.Hero.Parser);
    private readonly pbc::RepeatedField<global::Msg.Hero> heros_ = new pbc::RepeatedField<global::Msg.Hero>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.Hero> Heros {
      get { return heros_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Err, other.Err)) return false;
      if(!heros_.Equals(other.heros_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (err_ != null) hash ^= Err.GetHashCode();
      hash ^= heros_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (err_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Err);
      }
      heros_.WriteTo(output, _repeated_heros_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (err_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Err);
      }
      size += heros_.CalculateSize(_repeated_heros_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.err_ != null) {
        if (err_ == null) {
          err_ = new global::Msg.Error();
        }
        Err.MergeFrom(other.Err);
      }
      heros_.Add(other.heros_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            code_ = (global::Msg.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (err_ == null) {
              err_ = new global::Msg.Error();
            }
            input.ReadMessage(err_);
            break;
          }
          case 26: {
            heros_.AddEntriesFrom(input, _repeated_heros_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroLotteryRequest : pb::IMessage<HeroLotteryRequest> {
    private static readonly pb::MessageParser<HeroLotteryRequest> _parser = new pb::MessageParser<HeroLotteryRequest>(() => new HeroLotteryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroLotteryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroLotteryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroLotteryRequest(HeroLotteryRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroLotteryRequest Clone() {
      return new HeroLotteryRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroLotteryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroLotteryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroLotteryRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class HeroLotteryResponse : pb::IMessage<HeroLotteryResponse> {
    private static readonly pb::MessageParser<HeroLotteryResponse> _parser = new pb::MessageParser<HeroLotteryResponse>(() => new HeroLotteryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroLotteryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroLotteryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroLotteryResponse(HeroLotteryResponse other) : this() {
      code_ = other.code_;
      err_ = other.err_ != null ? other.err_.Clone() : null;
      heroLottery_ = other.heroLottery_ != null ? other.heroLottery_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroLotteryResponse Clone() {
      return new HeroLotteryResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Msg.ResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private global::Msg.Error err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Error Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "heroLottery" field.</summary>
    public const int HeroLotteryFieldNumber = 3;
    private global::Msg.HeroLottery heroLottery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.HeroLottery HeroLottery {
      get { return heroLottery_; }
      set {
        heroLottery_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroLotteryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroLotteryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Err, other.Err)) return false;
      if (!object.Equals(HeroLottery, other.HeroLottery)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (err_ != null) hash ^= Err.GetHashCode();
      if (heroLottery_ != null) hash ^= HeroLottery.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (err_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Err);
      }
      if (heroLottery_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HeroLottery);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (err_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Err);
      }
      if (heroLottery_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeroLottery);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroLotteryResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.err_ != null) {
        if (err_ == null) {
          err_ = new global::Msg.Error();
        }
        Err.MergeFrom(other.Err);
      }
      if (other.heroLottery_ != null) {
        if (heroLottery_ == null) {
          heroLottery_ = new global::Msg.HeroLottery();
        }
        HeroLottery.MergeFrom(other.HeroLottery);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            code_ = (global::Msg.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (err_ == null) {
              err_ = new global::Msg.Error();
            }
            input.ReadMessage(err_);
            break;
          }
          case 26: {
            if (heroLottery_ == null) {
              heroLottery_ = new global::Msg.HeroLottery();
            }
            input.ReadMessage(heroLottery_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroRandomRequest : pb::IMessage<HeroRandomRequest> {
    private static readonly pb::MessageParser<HeroRandomRequest> _parser = new pb::MessageParser<HeroRandomRequest>(() => new HeroRandomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroRandomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroRandomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroRandomRequest(HeroRandomRequest other) : this() {
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroRandomRequest Clone() {
      return new HeroRandomRequest(this);
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 1;
    private global::Msg.HeroRandomLevel level_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.HeroRandomLevel Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroRandomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroRandomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroRandomRequest other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            level_ = (global::Msg.HeroRandomLevel) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroRandomResponse : pb::IMessage<HeroRandomResponse> {
    private static readonly pb::MessageParser<HeroRandomResponse> _parser = new pb::MessageParser<HeroRandomResponse>(() => new HeroRandomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroRandomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroRandomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroRandomResponse(HeroRandomResponse other) : this() {
      code_ = other.code_;
      err_ = other.err_ != null ? other.err_.Clone() : null;
      hero_ = other.hero_ != null ? other.hero_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroRandomResponse Clone() {
      return new HeroRandomResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Msg.ResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private global::Msg.Error err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Error Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "hero" field.</summary>
    public const int HeroFieldNumber = 3;
    private global::Msg.Hero hero_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Hero Hero {
      get { return hero_; }
      set {
        hero_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroRandomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroRandomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Err, other.Err)) return false;
      if (!object.Equals(Hero, other.Hero)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (err_ != null) hash ^= Err.GetHashCode();
      if (hero_ != null) hash ^= Hero.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (err_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Err);
      }
      if (hero_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Hero);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (err_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Err);
      }
      if (hero_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hero);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroRandomResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.err_ != null) {
        if (err_ == null) {
          err_ = new global::Msg.Error();
        }
        Err.MergeFrom(other.Err);
      }
      if (other.hero_ != null) {
        if (hero_ == null) {
          hero_ = new global::Msg.Hero();
        }
        Hero.MergeFrom(other.Hero);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            code_ = (global::Msg.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (err_ == null) {
              err_ = new global::Msg.Error();
            }
            input.ReadMessage(err_);
            break;
          }
          case 26: {
            if (hero_ == null) {
              hero_ = new global::Msg.Hero();
            }
            input.ReadMessage(hero_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroOwnRequest : pb::IMessage<HeroOwnRequest> {
    private static readonly pb::MessageParser<HeroOwnRequest> _parser = new pb::MessageParser<HeroOwnRequest>(() => new HeroOwnRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroOwnRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroOwnRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroOwnRequest(HeroOwnRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroOwnRequest Clone() {
      return new HeroOwnRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroOwnRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroOwnRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroOwnRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class HeroOwnResponse : pb::IMessage<HeroOwnResponse> {
    private static readonly pb::MessageParser<HeroOwnResponse> _parser = new pb::MessageParser<HeroOwnResponse>(() => new HeroOwnResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroOwnResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroOwnResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroOwnResponse(HeroOwnResponse other) : this() {
      code_ = other.code_;
      err_ = other.err_ != null ? other.err_.Clone() : null;
      heros_ = other.heros_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroOwnResponse Clone() {
      return new HeroOwnResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Msg.ResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private global::Msg.Error err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Error Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "heros" field.</summary>
    public const int HerosFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.Hero> _repeated_heros_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.Hero.Parser);
    private readonly pbc::RepeatedField<global::Msg.Hero> heros_ = new pbc::RepeatedField<global::Msg.Hero>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.Hero> Heros {
      get { return heros_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroOwnResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroOwnResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Err, other.Err)) return false;
      if(!heros_.Equals(other.heros_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (err_ != null) hash ^= Err.GetHashCode();
      hash ^= heros_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (err_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Err);
      }
      heros_.WriteTo(output, _repeated_heros_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (err_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Err);
      }
      size += heros_.CalculateSize(_repeated_heros_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroOwnResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.err_ != null) {
        if (err_ == null) {
          err_ = new global::Msg.Error();
        }
        Err.MergeFrom(other.Err);
      }
      heros_.Add(other.heros_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            code_ = (global::Msg.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (err_ == null) {
              err_ = new global::Msg.Error();
            }
            input.ReadMessage(err_);
            break;
          }
          case 26: {
            heros_.AddEntriesFrom(input, _repeated_heros_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroSelectRequest : pb::IMessage<HeroSelectRequest> {
    private static readonly pb::MessageParser<HeroSelectRequest> _parser = new pb::MessageParser<HeroSelectRequest>(() => new HeroSelectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroSelectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSelectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSelectRequest(HeroSelectRequest other) : this() {
      heroId_ = other.heroId_;
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSelectRequest Clone() {
      return new HeroSelectRequest(this);
    }

    /// <summary>Field number for the "heroId" field.</summary>
    public const int HeroIdFieldNumber = 1;
    private string heroId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeroId {
      get { return heroId_; }
      set {
        heroId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroSelectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroSelectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroId != other.HeroId) return false;
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroId.Length != 0) hash ^= HeroId.GetHashCode();
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HeroId);
      }
      if (Pos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeroId);
      }
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroSelectRequest other) {
      if (other == null) {
        return;
      }
      if (other.HeroId.Length != 0) {
        HeroId = other.HeroId;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HeroId = input.ReadString();
            break;
          }
          case 16: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroSelectResponse : pb::IMessage<HeroSelectResponse> {
    private static readonly pb::MessageParser<HeroSelectResponse> _parser = new pb::MessageParser<HeroSelectResponse>(() => new HeroSelectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroSelectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSelectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSelectResponse(HeroSelectResponse other) : this() {
      code_ = other.code_;
      err_ = other.err_ != null ? other.err_.Clone() : null;
      heroIds_ = other.heroIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSelectResponse Clone() {
      return new HeroSelectResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Msg.ResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private global::Msg.Error err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Error Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "heroIds" field.</summary>
    public const int HeroIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_heroIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> heroIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> HeroIds {
      get { return heroIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroSelectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroSelectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Err, other.Err)) return false;
      if(!heroIds_.Equals(other.heroIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (err_ != null) hash ^= Err.GetHashCode();
      hash ^= heroIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (err_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Err);
      }
      heroIds_.WriteTo(output, _repeated_heroIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (err_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Err);
      }
      size += heroIds_.CalculateSize(_repeated_heroIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroSelectResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.err_ != null) {
        if (err_ == null) {
          err_ = new global::Msg.Error();
        }
        Err.MergeFrom(other.Err);
      }
      heroIds_.Add(other.heroIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            code_ = (global::Msg.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (err_ == null) {
              err_ = new global::Msg.Error();
            }
            input.ReadMessage(err_);
            break;
          }
          case 26: {
            heroIds_.AddEntriesFrom(input, _repeated_heroIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroUnSelectRequest : pb::IMessage<HeroUnSelectRequest> {
    private static readonly pb::MessageParser<HeroUnSelectRequest> _parser = new pb::MessageParser<HeroUnSelectRequest>(() => new HeroUnSelectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroUnSelectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroUnSelectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroUnSelectRequest(HeroUnSelectRequest other) : this() {
      heroId_ = other.heroId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroUnSelectRequest Clone() {
      return new HeroUnSelectRequest(this);
    }

    /// <summary>Field number for the "heroId" field.</summary>
    public const int HeroIdFieldNumber = 1;
    private string heroId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeroId {
      get { return heroId_; }
      set {
        heroId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroUnSelectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroUnSelectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroId != other.HeroId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroId.Length != 0) hash ^= HeroId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HeroId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeroId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroUnSelectRequest other) {
      if (other == null) {
        return;
      }
      if (other.HeroId.Length != 0) {
        HeroId = other.HeroId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HeroId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroUnSelectResponse : pb::IMessage<HeroUnSelectResponse> {
    private static readonly pb::MessageParser<HeroUnSelectResponse> _parser = new pb::MessageParser<HeroUnSelectResponse>(() => new HeroUnSelectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroUnSelectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroUnSelectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroUnSelectResponse(HeroUnSelectResponse other) : this() {
      code_ = other.code_;
      err_ = other.err_ != null ? other.err_.Clone() : null;
      heroIds_ = other.heroIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroUnSelectResponse Clone() {
      return new HeroUnSelectResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Msg.ResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private global::Msg.Error err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Error Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "heroIds" field.</summary>
    public const int HeroIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_heroIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> heroIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> HeroIds {
      get { return heroIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroUnSelectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroUnSelectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Err, other.Err)) return false;
      if(!heroIds_.Equals(other.heroIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (err_ != null) hash ^= Err.GetHashCode();
      hash ^= heroIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (err_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Err);
      }
      heroIds_.WriteTo(output, _repeated_heroIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (err_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Err);
      }
      size += heroIds_.CalculateSize(_repeated_heroIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroUnSelectResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.err_ != null) {
        if (err_ == null) {
          err_ = new global::Msg.Error();
        }
        Err.MergeFrom(other.Err);
      }
      heroIds_.Add(other.heroIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            code_ = (global::Msg.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (err_ == null) {
              err_ = new global::Msg.Error();
            }
            input.ReadMessage(err_);
            break;
          }
          case 26: {
            heroIds_.AddEntriesFrom(input, _repeated_heroIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroSkillsRequest : pb::IMessage<HeroSkillsRequest> {
    private static readonly pb::MessageParser<HeroSkillsRequest> _parser = new pb::MessageParser<HeroSkillsRequest>(() => new HeroSkillsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroSkillsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSkillsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSkillsRequest(HeroSkillsRequest other) : this() {
      heroId_ = other.heroId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSkillsRequest Clone() {
      return new HeroSkillsRequest(this);
    }

    /// <summary>Field number for the "heroId" field.</summary>
    public const int HeroIdFieldNumber = 1;
    private string heroId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeroId {
      get { return heroId_; }
      set {
        heroId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroSkillsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroSkillsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroId != other.HeroId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroId.Length != 0) hash ^= HeroId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HeroId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeroId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroSkillsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HeroId.Length != 0) {
        HeroId = other.HeroId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HeroId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroSkillsResponse : pb::IMessage<HeroSkillsResponse> {
    private static readonly pb::MessageParser<HeroSkillsResponse> _parser = new pb::MessageParser<HeroSkillsResponse>(() => new HeroSkillsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroSkillsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSkillsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSkillsResponse(HeroSkillsResponse other) : this() {
      code_ = other.code_;
      err_ = other.err_ != null ? other.err_.Clone() : null;
      skills_ = other.skills_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSkillsResponse Clone() {
      return new HeroSkillsResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Msg.ResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private global::Msg.Error err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Error Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "skills" field.</summary>
    public const int SkillsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.Skill> _repeated_skills_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.Skill.Parser);
    private readonly pbc::RepeatedField<global::Msg.Skill> skills_ = new pbc::RepeatedField<global::Msg.Skill>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.Skill> Skills {
      get { return skills_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroSkillsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroSkillsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Err, other.Err)) return false;
      if(!skills_.Equals(other.skills_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (err_ != null) hash ^= Err.GetHashCode();
      hash ^= skills_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (err_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Err);
      }
      skills_.WriteTo(output, _repeated_skills_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (err_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Err);
      }
      size += skills_.CalculateSize(_repeated_skills_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroSkillsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.err_ != null) {
        if (err_ == null) {
          err_ = new global::Msg.Error();
        }
        Err.MergeFrom(other.Err);
      }
      skills_.Add(other.skills_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            code_ = (global::Msg.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (err_ == null) {
              err_ = new global::Msg.Error();
            }
            input.ReadMessage(err_);
            break;
          }
          case 26: {
            skills_.AddEntriesFrom(input, _repeated_skills_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroEquipsRequest : pb::IMessage<HeroEquipsRequest> {
    private static readonly pb::MessageParser<HeroEquipsRequest> _parser = new pb::MessageParser<HeroEquipsRequest>(() => new HeroEquipsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroEquipsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipsRequest(HeroEquipsRequest other) : this() {
      heroId_ = other.heroId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipsRequest Clone() {
      return new HeroEquipsRequest(this);
    }

    /// <summary>Field number for the "heroId" field.</summary>
    public const int HeroIdFieldNumber = 1;
    private string heroId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeroId {
      get { return heroId_; }
      set {
        heroId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroEquipsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroEquipsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroId != other.HeroId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroId.Length != 0) hash ^= HeroId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HeroId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeroId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroEquipsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HeroId.Length != 0) {
        HeroId = other.HeroId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HeroId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroEquipsResponse : pb::IMessage<HeroEquipsResponse> {
    private static readonly pb::MessageParser<HeroEquipsResponse> _parser = new pb::MessageParser<HeroEquipsResponse>(() => new HeroEquipsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroEquipsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipsResponse(HeroEquipsResponse other) : this() {
      code_ = other.code_;
      err_ = other.err_ != null ? other.err_.Clone() : null;
      equips_ = other.equips_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipsResponse Clone() {
      return new HeroEquipsResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Msg.ResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private global::Msg.Error err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Error Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "equips" field.</summary>
    public const int EquipsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.Equip> _repeated_equips_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.Equip.Parser);
    private readonly pbc::RepeatedField<global::Msg.Equip> equips_ = new pbc::RepeatedField<global::Msg.Equip>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.Equip> Equips {
      get { return equips_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroEquipsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroEquipsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Err, other.Err)) return false;
      if(!equips_.Equals(other.equips_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (err_ != null) hash ^= Err.GetHashCode();
      hash ^= equips_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (err_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Err);
      }
      equips_.WriteTo(output, _repeated_equips_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (err_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Err);
      }
      size += equips_.CalculateSize(_repeated_equips_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroEquipsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.err_ != null) {
        if (err_ == null) {
          err_ = new global::Msg.Error();
        }
        Err.MergeFrom(other.Err);
      }
      equips_.Add(other.equips_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            code_ = (global::Msg.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (err_ == null) {
              err_ = new global::Msg.Error();
            }
            input.ReadMessage(err_);
            break;
          }
          case 26: {
            equips_.AddEntriesFrom(input, _repeated_equips_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Hero : pb::IMessage<Hero> {
    private static readonly pb::MessageParser<Hero> _parser = new pb::MessageParser<Hero>(() => new Hero());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hero> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hero() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hero(Hero other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      level_ = other.level_;
      strength_ = other.strength_;
      agility_ = other.agility_;
      intelligence_ = other.intelligence_;
      armor_ = other.armor_;
      attackMin_ = other.attackMin_;
      attackMax_ = other.attackMax_;
      blood_ = other.blood_;
      type_ = other.type_;
      strengthStep_ = other.strengthStep_;
      agilityStep_ = other.agilityStep_;
      intelligenceStep_ = other.intelligenceStep_;
      skillIds_ = other.skillIds_.Clone();
      heroId_ = other.heroId_;
      playerId_ = other.playerId_;
      isSelect_ = other.isSelect_;
      pos_ = other.pos_;
      mP_ = other.mP_;
      maxBlood_ = other.maxBlood_;
      maxMP_ = other.maxMP_;
      skillPoint_ = other.skillPoint_;
      exp_ = other.exp_;
      levelUpExp_ = other.levelUpExp_;
      itemIds_ = other.itemIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hero Clone() {
      return new Hero(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "Strength" field.</summary>
    public const int StrengthFieldNumber = 4;
    private int strength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Strength {
      get { return strength_; }
      set {
        strength_ = value;
      }
    }

    /// <summary>Field number for the "Agility" field.</summary>
    public const int AgilityFieldNumber = 5;
    private int agility_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Agility {
      get { return agility_; }
      set {
        agility_ = value;
      }
    }

    /// <summary>Field number for the "Intelligence" field.</summary>
    public const int IntelligenceFieldNumber = 6;
    private int intelligence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Intelligence {
      get { return intelligence_; }
      set {
        intelligence_ = value;
      }
    }

    /// <summary>Field number for the "Armor" field.</summary>
    public const int ArmorFieldNumber = 7;
    private int armor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Armor {
      get { return armor_; }
      set {
        armor_ = value;
      }
    }

    /// <summary>Field number for the "AttackMin" field.</summary>
    public const int AttackMinFieldNumber = 8;
    private int attackMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackMin {
      get { return attackMin_; }
      set {
        attackMin_ = value;
      }
    }

    /// <summary>Field number for the "AttackMax" field.</summary>
    public const int AttackMaxFieldNumber = 9;
    private int attackMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackMax {
      get { return attackMax_; }
      set {
        attackMax_ = value;
      }
    }

    /// <summary>Field number for the "Blood" field.</summary>
    public const int BloodFieldNumber = 10;
    private int blood_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Blood {
      get { return blood_; }
      set {
        blood_ = value;
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 11;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "StrengthStep" field.</summary>
    public const int StrengthStepFieldNumber = 12;
    private int strengthStep_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StrengthStep {
      get { return strengthStep_; }
      set {
        strengthStep_ = value;
      }
    }

    /// <summary>Field number for the "AgilityStep" field.</summary>
    public const int AgilityStepFieldNumber = 13;
    private int agilityStep_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AgilityStep {
      get { return agilityStep_; }
      set {
        agilityStep_ = value;
      }
    }

    /// <summary>Field number for the "IntelligenceStep" field.</summary>
    public const int IntelligenceStepFieldNumber = 14;
    private int intelligenceStep_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntelligenceStep {
      get { return intelligenceStep_; }
      set {
        intelligenceStep_ = value;
      }
    }

    /// <summary>Field number for the "SkillIds" field.</summary>
    public const int SkillIdsFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _repeated_skillIds_codec
        = pb::FieldCodec.ForString(122);
    private readonly pbc::RepeatedField<string> skillIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SkillIds {
      get { return skillIds_; }
    }

    /// <summary>Field number for the "HeroId" field.</summary>
    public const int HeroIdFieldNumber = 16;
    private string heroId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeroId {
      get { return heroId_; }
      set {
        heroId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 17;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSelect" field.</summary>
    public const int IsSelectFieldNumber = 18;
    private bool isSelect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSelect {
      get { return isSelect_; }
      set {
        isSelect_ = value;
      }
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 19;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "MP" field.</summary>
    public const int MPFieldNumber = 20;
    private int mP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MP {
      get { return mP_; }
      set {
        mP_ = value;
      }
    }

    /// <summary>Field number for the "MaxBlood" field.</summary>
    public const int MaxBloodFieldNumber = 21;
    private int maxBlood_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxBlood {
      get { return maxBlood_; }
      set {
        maxBlood_ = value;
      }
    }

    /// <summary>Field number for the "MaxMP" field.</summary>
    public const int MaxMPFieldNumber = 22;
    private int maxMP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxMP {
      get { return maxMP_; }
      set {
        maxMP_ = value;
      }
    }

    /// <summary>Field number for the "SkillPoint" field.</summary>
    public const int SkillPointFieldNumber = 23;
    private int skillPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillPoint {
      get { return skillPoint_; }
      set {
        skillPoint_ = value;
      }
    }

    /// <summary>Field number for the "Exp" field.</summary>
    public const int ExpFieldNumber = 24;
    private int exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "LevelUpExp" field.</summary>
    public const int LevelUpExpFieldNumber = 25;
    private int levelUpExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelUpExp {
      get { return levelUpExp_; }
      set {
        levelUpExp_ = value;
      }
    }

    /// <summary>Field number for the "ItemIds" field.</summary>
    public const int ItemIdsFieldNumber = 26;
    private static readonly pb::FieldCodec<string> _repeated_itemIds_codec
        = pb::FieldCodec.ForString(210);
    private readonly pbc::RepeatedField<string> itemIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ItemIds {
      get { return itemIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hero);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hero other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Level != other.Level) return false;
      if (Strength != other.Strength) return false;
      if (Agility != other.Agility) return false;
      if (Intelligence != other.Intelligence) return false;
      if (Armor != other.Armor) return false;
      if (AttackMin != other.AttackMin) return false;
      if (AttackMax != other.AttackMax) return false;
      if (Blood != other.Blood) return false;
      if (Type != other.Type) return false;
      if (StrengthStep != other.StrengthStep) return false;
      if (AgilityStep != other.AgilityStep) return false;
      if (IntelligenceStep != other.IntelligenceStep) return false;
      if(!skillIds_.Equals(other.skillIds_)) return false;
      if (HeroId != other.HeroId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (IsSelect != other.IsSelect) return false;
      if (Pos != other.Pos) return false;
      if (MP != other.MP) return false;
      if (MaxBlood != other.MaxBlood) return false;
      if (MaxMP != other.MaxMP) return false;
      if (SkillPoint != other.SkillPoint) return false;
      if (Exp != other.Exp) return false;
      if (LevelUpExp != other.LevelUpExp) return false;
      if(!itemIds_.Equals(other.itemIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Strength != 0) hash ^= Strength.GetHashCode();
      if (Agility != 0) hash ^= Agility.GetHashCode();
      if (Intelligence != 0) hash ^= Intelligence.GetHashCode();
      if (Armor != 0) hash ^= Armor.GetHashCode();
      if (AttackMin != 0) hash ^= AttackMin.GetHashCode();
      if (AttackMax != 0) hash ^= AttackMax.GetHashCode();
      if (Blood != 0) hash ^= Blood.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (StrengthStep != 0) hash ^= StrengthStep.GetHashCode();
      if (AgilityStep != 0) hash ^= AgilityStep.GetHashCode();
      if (IntelligenceStep != 0) hash ^= IntelligenceStep.GetHashCode();
      hash ^= skillIds_.GetHashCode();
      if (HeroId.Length != 0) hash ^= HeroId.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (IsSelect != false) hash ^= IsSelect.GetHashCode();
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (MP != 0) hash ^= MP.GetHashCode();
      if (MaxBlood != 0) hash ^= MaxBlood.GetHashCode();
      if (MaxMP != 0) hash ^= MaxMP.GetHashCode();
      if (SkillPoint != 0) hash ^= SkillPoint.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (LevelUpExp != 0) hash ^= LevelUpExp.GetHashCode();
      hash ^= itemIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (Strength != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Strength);
      }
      if (Agility != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Agility);
      }
      if (Intelligence != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Intelligence);
      }
      if (Armor != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Armor);
      }
      if (AttackMin != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(AttackMin);
      }
      if (AttackMax != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AttackMax);
      }
      if (Blood != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Blood);
      }
      if (Type != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Type);
      }
      if (StrengthStep != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(StrengthStep);
      }
      if (AgilityStep != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(AgilityStep);
      }
      if (IntelligenceStep != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(IntelligenceStep);
      }
      skillIds_.WriteTo(output, _repeated_skillIds_codec);
      if (HeroId.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(HeroId);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(PlayerId);
      }
      if (IsSelect != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsSelect);
      }
      if (Pos != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(Pos);
      }
      if (MP != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(MP);
      }
      if (MaxBlood != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(MaxBlood);
      }
      if (MaxMP != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(MaxMP);
      }
      if (SkillPoint != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(SkillPoint);
      }
      if (Exp != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(Exp);
      }
      if (LevelUpExp != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(LevelUpExp);
      }
      itemIds_.WriteTo(output, _repeated_itemIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Strength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Strength);
      }
      if (Agility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Agility);
      }
      if (Intelligence != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Intelligence);
      }
      if (Armor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Armor);
      }
      if (AttackMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackMin);
      }
      if (AttackMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackMax);
      }
      if (Blood != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Blood);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (StrengthStep != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StrengthStep);
      }
      if (AgilityStep != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgilityStep);
      }
      if (IntelligenceStep != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntelligenceStep);
      }
      size += skillIds_.CalculateSize(_repeated_skillIds_codec);
      if (HeroId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HeroId);
      }
      if (PlayerId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (IsSelect != false) {
        size += 2 + 1;
      }
      if (Pos != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (MP != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MP);
      }
      if (MaxBlood != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxBlood);
      }
      if (MaxMP != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxMP);
      }
      if (SkillPoint != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SkillPoint);
      }
      if (Exp != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (LevelUpExp != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LevelUpExp);
      }
      size += itemIds_.CalculateSize(_repeated_itemIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hero other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Strength != 0) {
        Strength = other.Strength;
      }
      if (other.Agility != 0) {
        Agility = other.Agility;
      }
      if (other.Intelligence != 0) {
        Intelligence = other.Intelligence;
      }
      if (other.Armor != 0) {
        Armor = other.Armor;
      }
      if (other.AttackMin != 0) {
        AttackMin = other.AttackMin;
      }
      if (other.AttackMax != 0) {
        AttackMax = other.AttackMax;
      }
      if (other.Blood != 0) {
        Blood = other.Blood;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.StrengthStep != 0) {
        StrengthStep = other.StrengthStep;
      }
      if (other.AgilityStep != 0) {
        AgilityStep = other.AgilityStep;
      }
      if (other.IntelligenceStep != 0) {
        IntelligenceStep = other.IntelligenceStep;
      }
      skillIds_.Add(other.skillIds_);
      if (other.HeroId.Length != 0) {
        HeroId = other.HeroId;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.IsSelect != false) {
        IsSelect = other.IsSelect;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      if (other.MP != 0) {
        MP = other.MP;
      }
      if (other.MaxBlood != 0) {
        MaxBlood = other.MaxBlood;
      }
      if (other.MaxMP != 0) {
        MaxMP = other.MaxMP;
      }
      if (other.SkillPoint != 0) {
        SkillPoint = other.SkillPoint;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      if (other.LevelUpExp != 0) {
        LevelUpExp = other.LevelUpExp;
      }
      itemIds_.Add(other.itemIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            Strength = input.ReadInt32();
            break;
          }
          case 40: {
            Agility = input.ReadInt32();
            break;
          }
          case 48: {
            Intelligence = input.ReadInt32();
            break;
          }
          case 56: {
            Armor = input.ReadInt32();
            break;
          }
          case 64: {
            AttackMin = input.ReadInt32();
            break;
          }
          case 72: {
            AttackMax = input.ReadInt32();
            break;
          }
          case 80: {
            Blood = input.ReadInt32();
            break;
          }
          case 88: {
            Type = input.ReadInt32();
            break;
          }
          case 96: {
            StrengthStep = input.ReadInt32();
            break;
          }
          case 104: {
            AgilityStep = input.ReadInt32();
            break;
          }
          case 112: {
            IntelligenceStep = input.ReadInt32();
            break;
          }
          case 122: {
            skillIds_.AddEntriesFrom(input, _repeated_skillIds_codec);
            break;
          }
          case 130: {
            HeroId = input.ReadString();
            break;
          }
          case 138: {
            PlayerId = input.ReadString();
            break;
          }
          case 144: {
            IsSelect = input.ReadBool();
            break;
          }
          case 152: {
            Pos = input.ReadInt32();
            break;
          }
          case 160: {
            MP = input.ReadInt32();
            break;
          }
          case 168: {
            MaxBlood = input.ReadInt32();
            break;
          }
          case 176: {
            MaxMP = input.ReadInt32();
            break;
          }
          case 184: {
            SkillPoint = input.ReadInt32();
            break;
          }
          case 192: {
            Exp = input.ReadInt32();
            break;
          }
          case 200: {
            LevelUpExp = input.ReadInt32();
            break;
          }
          case 210: {
            itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroLottery : pb::IMessage<HeroLottery> {
    private static readonly pb::MessageParser<HeroLottery> _parser = new pb::MessageParser<HeroLottery>(() => new HeroLottery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroLottery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.HeroReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroLottery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroLottery(HeroLottery other) : this() {
      freeGoodLottery_ = other.freeGoodLottery_;
      freeBetterLottery_ = other.freeBetterLottery_;
      nextGoodLotteryStamp_ = other.nextGoodLotteryStamp_;
      nextBetterLotteryStamp_ = other.nextBetterLotteryStamp_;
      maxFreeGoodLottery_ = other.maxFreeGoodLottery_;
      maxFreeBetterLottery_ = other.maxFreeBetterLottery_;
      goodLotteryCnt_ = other.goodLotteryCnt_;
      betterLotteryCnt_ = other.betterLotteryCnt_;
      needGoodLotteryCnt_ = other.needGoodLotteryCnt_;
      needBetterLotteryCnt_ = other.needBetterLotteryCnt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroLottery Clone() {
      return new HeroLottery(this);
    }

    /// <summary>Field number for the "FreeGoodLottery" field.</summary>
    public const int FreeGoodLotteryFieldNumber = 1;
    private int freeGoodLottery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeGoodLottery {
      get { return freeGoodLottery_; }
      set {
        freeGoodLottery_ = value;
      }
    }

    /// <summary>Field number for the "FreeBetterLottery" field.</summary>
    public const int FreeBetterLotteryFieldNumber = 2;
    private int freeBetterLottery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeBetterLottery {
      get { return freeBetterLottery_; }
      set {
        freeBetterLottery_ = value;
      }
    }

    /// <summary>Field number for the "NextGoodLotteryStamp" field.</summary>
    public const int NextGoodLotteryStampFieldNumber = 3;
    private long nextGoodLotteryStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NextGoodLotteryStamp {
      get { return nextGoodLotteryStamp_; }
      set {
        nextGoodLotteryStamp_ = value;
      }
    }

    /// <summary>Field number for the "NextBetterLotteryStamp" field.</summary>
    public const int NextBetterLotteryStampFieldNumber = 4;
    private long nextBetterLotteryStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NextBetterLotteryStamp {
      get { return nextBetterLotteryStamp_; }
      set {
        nextBetterLotteryStamp_ = value;
      }
    }

    /// <summary>Field number for the "MaxFreeGoodLottery" field.</summary>
    public const int MaxFreeGoodLotteryFieldNumber = 5;
    private int maxFreeGoodLottery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxFreeGoodLottery {
      get { return maxFreeGoodLottery_; }
      set {
        maxFreeGoodLottery_ = value;
      }
    }

    /// <summary>Field number for the "MaxFreeBetterLottery" field.</summary>
    public const int MaxFreeBetterLotteryFieldNumber = 6;
    private int maxFreeBetterLottery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxFreeBetterLottery {
      get { return maxFreeBetterLottery_; }
      set {
        maxFreeBetterLottery_ = value;
      }
    }

    /// <summary>Field number for the "GoodLotteryCnt" field.</summary>
    public const int GoodLotteryCntFieldNumber = 7;
    private int goodLotteryCnt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodLotteryCnt {
      get { return goodLotteryCnt_; }
      set {
        goodLotteryCnt_ = value;
      }
    }

    /// <summary>Field number for the "BetterLotteryCnt" field.</summary>
    public const int BetterLotteryCntFieldNumber = 8;
    private int betterLotteryCnt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetterLotteryCnt {
      get { return betterLotteryCnt_; }
      set {
        betterLotteryCnt_ = value;
      }
    }

    /// <summary>Field number for the "NeedGoodLotteryCnt" field.</summary>
    public const int NeedGoodLotteryCntFieldNumber = 9;
    private int needGoodLotteryCnt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NeedGoodLotteryCnt {
      get { return needGoodLotteryCnt_; }
      set {
        needGoodLotteryCnt_ = value;
      }
    }

    /// <summary>Field number for the "NeedBetterLotteryCnt" field.</summary>
    public const int NeedBetterLotteryCntFieldNumber = 10;
    private int needBetterLotteryCnt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NeedBetterLotteryCnt {
      get { return needBetterLotteryCnt_; }
      set {
        needBetterLotteryCnt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroLottery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroLottery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FreeGoodLottery != other.FreeGoodLottery) return false;
      if (FreeBetterLottery != other.FreeBetterLottery) return false;
      if (NextGoodLotteryStamp != other.NextGoodLotteryStamp) return false;
      if (NextBetterLotteryStamp != other.NextBetterLotteryStamp) return false;
      if (MaxFreeGoodLottery != other.MaxFreeGoodLottery) return false;
      if (MaxFreeBetterLottery != other.MaxFreeBetterLottery) return false;
      if (GoodLotteryCnt != other.GoodLotteryCnt) return false;
      if (BetterLotteryCnt != other.BetterLotteryCnt) return false;
      if (NeedGoodLotteryCnt != other.NeedGoodLotteryCnt) return false;
      if (NeedBetterLotteryCnt != other.NeedBetterLotteryCnt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FreeGoodLottery != 0) hash ^= FreeGoodLottery.GetHashCode();
      if (FreeBetterLottery != 0) hash ^= FreeBetterLottery.GetHashCode();
      if (NextGoodLotteryStamp != 0L) hash ^= NextGoodLotteryStamp.GetHashCode();
      if (NextBetterLotteryStamp != 0L) hash ^= NextBetterLotteryStamp.GetHashCode();
      if (MaxFreeGoodLottery != 0) hash ^= MaxFreeGoodLottery.GetHashCode();
      if (MaxFreeBetterLottery != 0) hash ^= MaxFreeBetterLottery.GetHashCode();
      if (GoodLotteryCnt != 0) hash ^= GoodLotteryCnt.GetHashCode();
      if (BetterLotteryCnt != 0) hash ^= BetterLotteryCnt.GetHashCode();
      if (NeedGoodLotteryCnt != 0) hash ^= NeedGoodLotteryCnt.GetHashCode();
      if (NeedBetterLotteryCnt != 0) hash ^= NeedBetterLotteryCnt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FreeGoodLottery != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FreeGoodLottery);
      }
      if (FreeBetterLottery != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FreeBetterLottery);
      }
      if (NextGoodLotteryStamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NextGoodLotteryStamp);
      }
      if (NextBetterLotteryStamp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NextBetterLotteryStamp);
      }
      if (MaxFreeGoodLottery != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxFreeGoodLottery);
      }
      if (MaxFreeBetterLottery != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxFreeBetterLottery);
      }
      if (GoodLotteryCnt != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(GoodLotteryCnt);
      }
      if (BetterLotteryCnt != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(BetterLotteryCnt);
      }
      if (NeedGoodLotteryCnt != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(NeedGoodLotteryCnt);
      }
      if (NeedBetterLotteryCnt != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(NeedBetterLotteryCnt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FreeGoodLottery != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeGoodLottery);
      }
      if (FreeBetterLottery != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeBetterLottery);
      }
      if (NextGoodLotteryStamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextGoodLotteryStamp);
      }
      if (NextBetterLotteryStamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextBetterLotteryStamp);
      }
      if (MaxFreeGoodLottery != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxFreeGoodLottery);
      }
      if (MaxFreeBetterLottery != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxFreeBetterLottery);
      }
      if (GoodLotteryCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodLotteryCnt);
      }
      if (BetterLotteryCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetterLotteryCnt);
      }
      if (NeedGoodLotteryCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NeedGoodLotteryCnt);
      }
      if (NeedBetterLotteryCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NeedBetterLotteryCnt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroLottery other) {
      if (other == null) {
        return;
      }
      if (other.FreeGoodLottery != 0) {
        FreeGoodLottery = other.FreeGoodLottery;
      }
      if (other.FreeBetterLottery != 0) {
        FreeBetterLottery = other.FreeBetterLottery;
      }
      if (other.NextGoodLotteryStamp != 0L) {
        NextGoodLotteryStamp = other.NextGoodLotteryStamp;
      }
      if (other.NextBetterLotteryStamp != 0L) {
        NextBetterLotteryStamp = other.NextBetterLotteryStamp;
      }
      if (other.MaxFreeGoodLottery != 0) {
        MaxFreeGoodLottery = other.MaxFreeGoodLottery;
      }
      if (other.MaxFreeBetterLottery != 0) {
        MaxFreeBetterLottery = other.MaxFreeBetterLottery;
      }
      if (other.GoodLotteryCnt != 0) {
        GoodLotteryCnt = other.GoodLotteryCnt;
      }
      if (other.BetterLotteryCnt != 0) {
        BetterLotteryCnt = other.BetterLotteryCnt;
      }
      if (other.NeedGoodLotteryCnt != 0) {
        NeedGoodLotteryCnt = other.NeedGoodLotteryCnt;
      }
      if (other.NeedBetterLotteryCnt != 0) {
        NeedBetterLotteryCnt = other.NeedBetterLotteryCnt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FreeGoodLottery = input.ReadInt32();
            break;
          }
          case 16: {
            FreeBetterLottery = input.ReadInt32();
            break;
          }
          case 24: {
            NextGoodLotteryStamp = input.ReadInt64();
            break;
          }
          case 32: {
            NextBetterLotteryStamp = input.ReadInt64();
            break;
          }
          case 40: {
            MaxFreeGoodLottery = input.ReadInt32();
            break;
          }
          case 48: {
            MaxFreeBetterLottery = input.ReadInt32();
            break;
          }
          case 56: {
            GoodLotteryCnt = input.ReadInt32();
            break;
          }
          case 64: {
            BetterLotteryCnt = input.ReadInt32();
            break;
          }
          case 72: {
            NeedGoodLotteryCnt = input.ReadInt32();
            break;
          }
          case 80: {
            NeedBetterLotteryCnt = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
