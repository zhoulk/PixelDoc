// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: group.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Msg {

  /// <summary>Holder for reflection information generated from group.proto</summary>
  public static partial class GroupReflection {

    #region Descriptor
    /// <summary>File descriptor for group.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GroupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgtncm91cC5wcm90bxIDbXNnGgllcnIucHJvdG8iJwoSR3JvdXBDcmVhdGVS",
            "ZXF1ZXN0EhEKCWdyb3VwTmFtZRgBIAEoCSJqChNHcm91cENyZWF0ZVJlc3Bv",
            "bnNlEh8KBGNvZGUYASABKA4yES5tc2cuUmVzcG9uc2VDb2RlEhcKA2VychgC",
            "IAEoCzIKLm1zZy5FcnJvchIZCgVncm91cBgDIAEoCzIKLm1zZy5Hcm91cCIR",
            "Cg9Hcm91cE93blJlcXVlc3QiZwoQR3JvdXBPd25SZXNwb25zZRIfCgRjb2Rl",
            "GAEgASgOMhEubXNnLlJlc3BvbnNlQ29kZRIXCgNlcnIYAiABKAsyCi5tc2cu",
            "RXJyb3ISGQoFZ3JvdXAYAyABKAsyCi5tc2cuR3JvdXAiEgoQR3JvdXBMaXN0",
            "UmVxdWVzdCJpChFHcm91cExpc3RSZXNwb25zZRIfCgRjb2RlGAEgASgOMhEu",
            "bXNnLlJlc3BvbnNlQ29kZRIXCgNlcnIYAiABKAsyCi5tc2cuRXJyb3ISGgoG",
            "Z3JvdXBzGAMgAygLMgoubXNnLkdyb3VwIiYKE0dyb3VwTWVtYmVyc1JlcXVl",
            "c3QSDwoHZ3JvdXBJZBgBIAEoCSJzChRHcm91cE1lbWJlcnNSZXNwb25zZRIf",
            "CgRjb2RlGAEgASgOMhEubXNnLlJlc3BvbnNlQ29kZRIXCgNlcnIYAiABKAsy",
            "Ci5tc2cuRXJyb3ISIQoHbWVtYmVycxgDIAMoCzIQLm1zZy5Hcm91cE1lbWJl",
            "ciIxChBHcm91cE9wZXJSZXF1ZXN0Eg8KB2dyb3VwSWQYASABKAkSDAoEb3Bl",
            "chgCIAEoBSJNChFHcm91cE9wZXJSZXNwb25zZRIfCgRjb2RlGAEgASgOMhEu",
            "bXNnLlJlc3BvbnNlQ29kZRIXCgNlcnIYAiABKAsyCi5tc2cuRXJyb3IixAEK",
            "BUdyb3VwEg8KB0dyb3VwSWQYASABKAkSEQoJR3JvdXBOYW1lGAIgASgJEhMK",
            "C0dyb3VwTGVhZGVyGAMgASgJEhgKEEdyb3VwRGVjbGFyYXRpb24YBCABKAkS",
            "EQoJTWVtYmVyQ250GAUgASgFEhMKC01lbWJlclRvdGFsGAYgASgFEhIKCkdy",
            "b3VwTGV2ZWwYByABKAUSFQoNQ29udHJpQ3VycmVudBgIIAEoBRIVCg1Db250",
            "cmlMZXZlbFVwGAkgASgFIpUBCgtHcm91cE1lbWJlchIOCgZVc2VySWQYASAB",
            "KAkSDAoETmFtZRgCIAEoCRINCgVMZXZlbBgDIAEoBRINCgVQb3dlchgEIAEo",
            "BRITCgtDb250cmlUb2RheRgFIAEoBRITCgtDb250cmlUb3RhbBgGIAEoBRIL",
            "CgNKb2IYByABKAUSEwoLT2ZmTGluZVRpbWUYCCABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Msg.ErrReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.GroupCreateRequest), global::Msg.GroupCreateRequest.Parser, new[]{ "GroupName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.GroupCreateResponse), global::Msg.GroupCreateResponse.Parser, new[]{ "Code", "Err", "Group" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.GroupOwnRequest), global::Msg.GroupOwnRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.GroupOwnResponse), global::Msg.GroupOwnResponse.Parser, new[]{ "Code", "Err", "Group" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.GroupListRequest), global::Msg.GroupListRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.GroupListResponse), global::Msg.GroupListResponse.Parser, new[]{ "Code", "Err", "Groups" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.GroupMembersRequest), global::Msg.GroupMembersRequest.Parser, new[]{ "GroupId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.GroupMembersResponse), global::Msg.GroupMembersResponse.Parser, new[]{ "Code", "Err", "Members" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.GroupOperRequest), global::Msg.GroupOperRequest.Parser, new[]{ "GroupId", "Oper" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.GroupOperResponse), global::Msg.GroupOperResponse.Parser, new[]{ "Code", "Err" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.Group), global::Msg.Group.Parser, new[]{ "GroupId", "GroupName", "GroupLeader", "GroupDeclaration", "MemberCnt", "MemberTotal", "GroupLevel", "ContriCurrent", "ContriLevelUp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.GroupMember), global::Msg.GroupMember.Parser, new[]{ "UserId", "Name", "Level", "Power", "ContriToday", "ContriTotal", "Job", "OffLineTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GroupCreateRequest : pb::IMessage<GroupCreateRequest> {
    private static readonly pb::MessageParser<GroupCreateRequest> _parser = new pb::MessageParser<GroupCreateRequest>(() => new GroupCreateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupCreateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.GroupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupCreateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupCreateRequest(GroupCreateRequest other) : this() {
      groupName_ = other.groupName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupCreateRequest Clone() {
      return new GroupCreateRequest(this);
    }

    /// <summary>Field number for the "groupName" field.</summary>
    public const int GroupNameFieldNumber = 1;
    private string groupName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupCreateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupCreateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupName != other.GroupName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupCreateRequest other) {
      if (other == null) {
        return;
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupCreateResponse : pb::IMessage<GroupCreateResponse> {
    private static readonly pb::MessageParser<GroupCreateResponse> _parser = new pb::MessageParser<GroupCreateResponse>(() => new GroupCreateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupCreateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.GroupReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupCreateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupCreateResponse(GroupCreateResponse other) : this() {
      code_ = other.code_;
      err_ = other.err_ != null ? other.err_.Clone() : null;
      group_ = other.group_ != null ? other.group_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupCreateResponse Clone() {
      return new GroupCreateResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Msg.ResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private global::Msg.Error err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Error Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 3;
    private global::Msg.Group group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Group Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupCreateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupCreateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Err, other.Err)) return false;
      if (!object.Equals(Group, other.Group)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (err_ != null) hash ^= Err.GetHashCode();
      if (group_ != null) hash ^= Group.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (err_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Err);
      }
      if (group_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Group);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (err_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Err);
      }
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupCreateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.err_ != null) {
        if (err_ == null) {
          err_ = new global::Msg.Error();
        }
        Err.MergeFrom(other.Err);
      }
      if (other.group_ != null) {
        if (group_ == null) {
          group_ = new global::Msg.Group();
        }
        Group.MergeFrom(other.Group);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            code_ = (global::Msg.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (err_ == null) {
              err_ = new global::Msg.Error();
            }
            input.ReadMessage(err_);
            break;
          }
          case 26: {
            if (group_ == null) {
              group_ = new global::Msg.Group();
            }
            input.ReadMessage(group_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupOwnRequest : pb::IMessage<GroupOwnRequest> {
    private static readonly pb::MessageParser<GroupOwnRequest> _parser = new pb::MessageParser<GroupOwnRequest>(() => new GroupOwnRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupOwnRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.GroupReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOwnRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOwnRequest(GroupOwnRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOwnRequest Clone() {
      return new GroupOwnRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupOwnRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupOwnRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupOwnRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GroupOwnResponse : pb::IMessage<GroupOwnResponse> {
    private static readonly pb::MessageParser<GroupOwnResponse> _parser = new pb::MessageParser<GroupOwnResponse>(() => new GroupOwnResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupOwnResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.GroupReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOwnResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOwnResponse(GroupOwnResponse other) : this() {
      code_ = other.code_;
      err_ = other.err_ != null ? other.err_.Clone() : null;
      group_ = other.group_ != null ? other.group_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOwnResponse Clone() {
      return new GroupOwnResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Msg.ResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private global::Msg.Error err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Error Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 3;
    private global::Msg.Group group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Group Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupOwnResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupOwnResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Err, other.Err)) return false;
      if (!object.Equals(Group, other.Group)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (err_ != null) hash ^= Err.GetHashCode();
      if (group_ != null) hash ^= Group.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (err_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Err);
      }
      if (group_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Group);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (err_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Err);
      }
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupOwnResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.err_ != null) {
        if (err_ == null) {
          err_ = new global::Msg.Error();
        }
        Err.MergeFrom(other.Err);
      }
      if (other.group_ != null) {
        if (group_ == null) {
          group_ = new global::Msg.Group();
        }
        Group.MergeFrom(other.Group);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            code_ = (global::Msg.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (err_ == null) {
              err_ = new global::Msg.Error();
            }
            input.ReadMessage(err_);
            break;
          }
          case 26: {
            if (group_ == null) {
              group_ = new global::Msg.Group();
            }
            input.ReadMessage(group_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupListRequest : pb::IMessage<GroupListRequest> {
    private static readonly pb::MessageParser<GroupListRequest> _parser = new pb::MessageParser<GroupListRequest>(() => new GroupListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.GroupReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupListRequest(GroupListRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupListRequest Clone() {
      return new GroupListRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupListRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GroupListResponse : pb::IMessage<GroupListResponse> {
    private static readonly pb::MessageParser<GroupListResponse> _parser = new pb::MessageParser<GroupListResponse>(() => new GroupListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.GroupReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupListResponse(GroupListResponse other) : this() {
      code_ = other.code_;
      err_ = other.err_ != null ? other.err_.Clone() : null;
      groups_ = other.groups_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupListResponse Clone() {
      return new GroupListResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Msg.ResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private global::Msg.Error err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Error Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "groups" field.</summary>
    public const int GroupsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.Group> _repeated_groups_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.Group.Parser);
    private readonly pbc::RepeatedField<global::Msg.Group> groups_ = new pbc::RepeatedField<global::Msg.Group>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.Group> Groups {
      get { return groups_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Err, other.Err)) return false;
      if(!groups_.Equals(other.groups_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (err_ != null) hash ^= Err.GetHashCode();
      hash ^= groups_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (err_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Err);
      }
      groups_.WriteTo(output, _repeated_groups_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (err_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Err);
      }
      size += groups_.CalculateSize(_repeated_groups_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupListResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.err_ != null) {
        if (err_ == null) {
          err_ = new global::Msg.Error();
        }
        Err.MergeFrom(other.Err);
      }
      groups_.Add(other.groups_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            code_ = (global::Msg.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (err_ == null) {
              err_ = new global::Msg.Error();
            }
            input.ReadMessage(err_);
            break;
          }
          case 26: {
            groups_.AddEntriesFrom(input, _repeated_groups_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupMembersRequest : pb::IMessage<GroupMembersRequest> {
    private static readonly pb::MessageParser<GroupMembersRequest> _parser = new pb::MessageParser<GroupMembersRequest>(() => new GroupMembersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupMembersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.GroupReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMembersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMembersRequest(GroupMembersRequest other) : this() {
      groupId_ = other.groupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMembersRequest Clone() {
      return new GroupMembersRequest(this);
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupMembersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupMembersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupMembersRequest other) {
      if (other == null) {
        return;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupMembersResponse : pb::IMessage<GroupMembersResponse> {
    private static readonly pb::MessageParser<GroupMembersResponse> _parser = new pb::MessageParser<GroupMembersResponse>(() => new GroupMembersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupMembersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.GroupReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMembersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMembersResponse(GroupMembersResponse other) : this() {
      code_ = other.code_;
      err_ = other.err_ != null ? other.err_.Clone() : null;
      members_ = other.members_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMembersResponse Clone() {
      return new GroupMembersResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Msg.ResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private global::Msg.Error err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Error Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.GroupMember> _repeated_members_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.GroupMember.Parser);
    private readonly pbc::RepeatedField<global::Msg.GroupMember> members_ = new pbc::RepeatedField<global::Msg.GroupMember>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.GroupMember> Members {
      get { return members_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupMembersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupMembersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Err, other.Err)) return false;
      if(!members_.Equals(other.members_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (err_ != null) hash ^= Err.GetHashCode();
      hash ^= members_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (err_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Err);
      }
      members_.WriteTo(output, _repeated_members_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (err_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Err);
      }
      size += members_.CalculateSize(_repeated_members_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupMembersResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.err_ != null) {
        if (err_ == null) {
          err_ = new global::Msg.Error();
        }
        Err.MergeFrom(other.Err);
      }
      members_.Add(other.members_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            code_ = (global::Msg.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (err_ == null) {
              err_ = new global::Msg.Error();
            }
            input.ReadMessage(err_);
            break;
          }
          case 26: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupOperRequest : pb::IMessage<GroupOperRequest> {
    private static readonly pb::MessageParser<GroupOperRequest> _parser = new pb::MessageParser<GroupOperRequest>(() => new GroupOperRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupOperRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.GroupReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOperRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOperRequest(GroupOperRequest other) : this() {
      groupId_ = other.groupId_;
      oper_ = other.oper_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOperRequest Clone() {
      return new GroupOperRequest(this);
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oper" field.</summary>
    public const int OperFieldNumber = 2;
    private int oper_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Oper {
      get { return oper_; }
      set {
        oper_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupOperRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupOperRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if (Oper != other.Oper) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (Oper != 0) hash ^= Oper.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      if (Oper != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Oper);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (Oper != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Oper);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupOperRequest other) {
      if (other == null) {
        return;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.Oper != 0) {
        Oper = other.Oper;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 16: {
            Oper = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupOperResponse : pb::IMessage<GroupOperResponse> {
    private static readonly pb::MessageParser<GroupOperResponse> _parser = new pb::MessageParser<GroupOperResponse>(() => new GroupOperResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupOperResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.GroupReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOperResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOperResponse(GroupOperResponse other) : this() {
      code_ = other.code_;
      err_ = other.err_ != null ? other.err_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOperResponse Clone() {
      return new GroupOperResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Msg.ResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 2;
    private global::Msg.Error err_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Error Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupOperResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupOperResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Err, other.Err)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (err_ != null) hash ^= Err.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (err_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Err);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (err_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Err);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupOperResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.err_ != null) {
        if (err_ == null) {
          err_ = new global::Msg.Error();
        }
        Err.MergeFrom(other.Err);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            code_ = (global::Msg.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (err_ == null) {
              err_ = new global::Msg.Error();
            }
            input.ReadMessage(err_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Group : pb::IMessage<Group> {
    private static readonly pb::MessageParser<Group> _parser = new pb::MessageParser<Group>(() => new Group());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Group> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.GroupReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Group() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Group(Group other) : this() {
      groupId_ = other.groupId_;
      groupName_ = other.groupName_;
      groupLeader_ = other.groupLeader_;
      groupDeclaration_ = other.groupDeclaration_;
      memberCnt_ = other.memberCnt_;
      memberTotal_ = other.memberTotal_;
      groupLevel_ = other.groupLevel_;
      contriCurrent_ = other.contriCurrent_;
      contriLevelUp_ = other.contriLevelUp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Group Clone() {
      return new Group(this);
    }

    /// <summary>Field number for the "GroupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GroupName" field.</summary>
    public const int GroupNameFieldNumber = 2;
    private string groupName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GroupLeader" field.</summary>
    public const int GroupLeaderFieldNumber = 3;
    private string groupLeader_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupLeader {
      get { return groupLeader_; }
      set {
        groupLeader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GroupDeclaration" field.</summary>
    public const int GroupDeclarationFieldNumber = 4;
    private string groupDeclaration_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupDeclaration {
      get { return groupDeclaration_; }
      set {
        groupDeclaration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberCnt" field.</summary>
    public const int MemberCntFieldNumber = 5;
    private int memberCnt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MemberCnt {
      get { return memberCnt_; }
      set {
        memberCnt_ = value;
      }
    }

    /// <summary>Field number for the "MemberTotal" field.</summary>
    public const int MemberTotalFieldNumber = 6;
    private int memberTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MemberTotal {
      get { return memberTotal_; }
      set {
        memberTotal_ = value;
      }
    }

    /// <summary>Field number for the "GroupLevel" field.</summary>
    public const int GroupLevelFieldNumber = 7;
    private int groupLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GroupLevel {
      get { return groupLevel_; }
      set {
        groupLevel_ = value;
      }
    }

    /// <summary>Field number for the "ContriCurrent" field.</summary>
    public const int ContriCurrentFieldNumber = 8;
    private int contriCurrent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContriCurrent {
      get { return contriCurrent_; }
      set {
        contriCurrent_ = value;
      }
    }

    /// <summary>Field number for the "ContriLevelUp" field.</summary>
    public const int ContriLevelUpFieldNumber = 9;
    private int contriLevelUp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContriLevelUp {
      get { return contriLevelUp_; }
      set {
        contriLevelUp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Group);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Group other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if (GroupName != other.GroupName) return false;
      if (GroupLeader != other.GroupLeader) return false;
      if (GroupDeclaration != other.GroupDeclaration) return false;
      if (MemberCnt != other.MemberCnt) return false;
      if (MemberTotal != other.MemberTotal) return false;
      if (GroupLevel != other.GroupLevel) return false;
      if (ContriCurrent != other.ContriCurrent) return false;
      if (ContriLevelUp != other.ContriLevelUp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      if (GroupLeader.Length != 0) hash ^= GroupLeader.GetHashCode();
      if (GroupDeclaration.Length != 0) hash ^= GroupDeclaration.GetHashCode();
      if (MemberCnt != 0) hash ^= MemberCnt.GetHashCode();
      if (MemberTotal != 0) hash ^= MemberTotal.GetHashCode();
      if (GroupLevel != 0) hash ^= GroupLevel.GetHashCode();
      if (ContriCurrent != 0) hash ^= ContriCurrent.GetHashCode();
      if (ContriLevelUp != 0) hash ^= ContriLevelUp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupName);
      }
      if (GroupLeader.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GroupLeader);
      }
      if (GroupDeclaration.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GroupDeclaration);
      }
      if (MemberCnt != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MemberCnt);
      }
      if (MemberTotal != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MemberTotal);
      }
      if (GroupLevel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(GroupLevel);
      }
      if (ContriCurrent != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ContriCurrent);
      }
      if (ContriLevelUp != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ContriLevelUp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (GroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      if (GroupLeader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupLeader);
      }
      if (GroupDeclaration.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupDeclaration);
      }
      if (MemberCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MemberCnt);
      }
      if (MemberTotal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MemberTotal);
      }
      if (GroupLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupLevel);
      }
      if (ContriCurrent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContriCurrent);
      }
      if (ContriLevelUp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContriLevelUp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Group other) {
      if (other == null) {
        return;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
      if (other.GroupLeader.Length != 0) {
        GroupLeader = other.GroupLeader;
      }
      if (other.GroupDeclaration.Length != 0) {
        GroupDeclaration = other.GroupDeclaration;
      }
      if (other.MemberCnt != 0) {
        MemberCnt = other.MemberCnt;
      }
      if (other.MemberTotal != 0) {
        MemberTotal = other.MemberTotal;
      }
      if (other.GroupLevel != 0) {
        GroupLevel = other.GroupLevel;
      }
      if (other.ContriCurrent != 0) {
        ContriCurrent = other.ContriCurrent;
      }
      if (other.ContriLevelUp != 0) {
        ContriLevelUp = other.ContriLevelUp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            GroupName = input.ReadString();
            break;
          }
          case 26: {
            GroupLeader = input.ReadString();
            break;
          }
          case 34: {
            GroupDeclaration = input.ReadString();
            break;
          }
          case 40: {
            MemberCnt = input.ReadInt32();
            break;
          }
          case 48: {
            MemberTotal = input.ReadInt32();
            break;
          }
          case 56: {
            GroupLevel = input.ReadInt32();
            break;
          }
          case 64: {
            ContriCurrent = input.ReadInt32();
            break;
          }
          case 72: {
            ContriLevelUp = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupMember : pb::IMessage<GroupMember> {
    private static readonly pb::MessageParser<GroupMember> _parser = new pb::MessageParser<GroupMember>(() => new GroupMember());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupMember> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.GroupReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMember() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMember(GroupMember other) : this() {
      userId_ = other.userId_;
      name_ = other.name_;
      level_ = other.level_;
      power_ = other.power_;
      contriToday_ = other.contriToday_;
      contriTotal_ = other.contriTotal_;
      job_ = other.job_;
      offLineTime_ = other.offLineTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMember Clone() {
      return new GroupMember(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "Power" field.</summary>
    public const int PowerFieldNumber = 4;
    private int power_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Power {
      get { return power_; }
      set {
        power_ = value;
      }
    }

    /// <summary>Field number for the "ContriToday" field.</summary>
    public const int ContriTodayFieldNumber = 5;
    private int contriToday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContriToday {
      get { return contriToday_; }
      set {
        contriToday_ = value;
      }
    }

    /// <summary>Field number for the "ContriTotal" field.</summary>
    public const int ContriTotalFieldNumber = 6;
    private int contriTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContriTotal {
      get { return contriTotal_; }
      set {
        contriTotal_ = value;
      }
    }

    /// <summary>Field number for the "Job" field.</summary>
    public const int JobFieldNumber = 7;
    private int job_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Job {
      get { return job_; }
      set {
        job_ = value;
      }
    }

    /// <summary>Field number for the "OffLineTime" field.</summary>
    public const int OffLineTimeFieldNumber = 8;
    private int offLineTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OffLineTime {
      get { return offLineTime_; }
      set {
        offLineTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupMember);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupMember other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Name != other.Name) return false;
      if (Level != other.Level) return false;
      if (Power != other.Power) return false;
      if (ContriToday != other.ContriToday) return false;
      if (ContriTotal != other.ContriTotal) return false;
      if (Job != other.Job) return false;
      if (OffLineTime != other.OffLineTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Power != 0) hash ^= Power.GetHashCode();
      if (ContriToday != 0) hash ^= ContriToday.GetHashCode();
      if (ContriTotal != 0) hash ^= ContriTotal.GetHashCode();
      if (Job != 0) hash ^= Job.GetHashCode();
      if (OffLineTime != 0) hash ^= OffLineTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (Power != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Power);
      }
      if (ContriToday != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ContriToday);
      }
      if (ContriTotal != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ContriTotal);
      }
      if (Job != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Job);
      }
      if (OffLineTime != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(OffLineTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Power != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Power);
      }
      if (ContriToday != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContriToday);
      }
      if (ContriTotal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContriTotal);
      }
      if (Job != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Job);
      }
      if (OffLineTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OffLineTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupMember other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Power != 0) {
        Power = other.Power;
      }
      if (other.ContriToday != 0) {
        ContriToday = other.ContriToday;
      }
      if (other.ContriTotal != 0) {
        ContriTotal = other.ContriTotal;
      }
      if (other.Job != 0) {
        Job = other.Job;
      }
      if (other.OffLineTime != 0) {
        OffLineTime = other.OffLineTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            Power = input.ReadInt32();
            break;
          }
          case 40: {
            ContriToday = input.ReadInt32();
            break;
          }
          case 48: {
            ContriTotal = input.ReadInt32();
            break;
          }
          case 56: {
            Job = input.ReadInt32();
            break;
          }
          case 64: {
            OffLineTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
